# Generated by Django 5.1.9 on 2025-05-27 09:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackrestRepository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('uri', models.CharField(max_length=1024)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backrest_repositories', to='tenants.tenant')),
            ],
            options={
                'verbose_name_plural': 'Backrest repositories',
            },
        ),
        migrations.CreateModel(
            name='BackrestPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('paths', models.JSONField(help_text='List of paths to backup')),
                ('excludes', models.JSONField(blank=True, default=list, help_text='List of patterns to exclude')),
                ('schedule', models.JSONField(help_text='Schedule configuration')),
                ('retention_policy', models.JSONField(help_text='Retention policy configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backrest_plans', to='tenants.tenant')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='backrest.backrestrepository')),
            ],
        ),
        migrations.CreateModel(
            name='BackrestOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_id', models.CharField(max_length=255, unique=True)),
                ('operation_type', models.CharField(choices=[('backup', 'Backup'), ('prune', 'Prune'), ('forget', 'Forget'), ('check', 'Check')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('snapshot_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stats', models.JSONField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('job', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backrest_operation', to='jobs.backupjob')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backrest_operations', to='tenants.tenant')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations', to='backrest.backrestplan')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='backrest.backrestrepository')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hostname', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField()),
                ('ssh_port', models.IntegerField(default=22)),
                ('ssh_user', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('connected', 'Connected'), ('failed', 'Failed'), ('backrest_installed', 'Backrest Installed')], default='pending', max_length=20)),
                ('last_connection', models.DateTimeField(blank=True, null=True)),
                ('backrest_port', models.IntegerField(default=9898)),
                ('backrest_version', models.CharField(blank=True, max_length=20, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='tenants.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='backrestrepository',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repositories', to='backrest.server'),
        ),
        migrations.CreateModel(
            name='SSHKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('private_key', models.TextField()),
                ('public_key', models.TextField()),
                ('fingerprint', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ssh_keys', to='tenants.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='server',
            name='ssh_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servers', to='backrest.sshkey'),
        ),
        migrations.CreateModel(
            name='BackrestSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_id', models.CharField(max_length=255)),
                ('time', models.DateTimeField()),
                ('hostname', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('summary', models.JSONField(default=dict)),
                ('size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('file_count', models.IntegerField(blank=True, null=True)),
                ('indexed_at', models.DateTimeField(auto_now_add=True)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='snapshots', to='backrest.backrestplan')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='backrest.backrestrepository')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backrest_snapshots', to='tenants.tenant')),
            ],
            options={
                'unique_together': {('repository', 'snapshot_id')},
            },
        ),
    ]
