.app-container {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
p-image{
    width: 100%;
    height: 100%;
    z-index: 1;
}

.fade-text {
  background: linear-gradient(to right, rgb(228, 225, 225) 80%, rgba(255, 255, 255, 0.694));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  display: inline-block;
}

/* For colored text variants */
.fade-text-primary {
  background: linear-gradient(to right, var(--primary-color) 80%, rgba(190, 190, 190, 0.81));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  display: inline-block;
}

.fade-text-blue {
  background: linear-gradient(to right, #2196F3 80%, rgba(75, 145, 216, 0.513));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  display: inline-block;
}

.app-layout {
  display: flex;
  min-height: 100vh;
  background-color: var(--surface-ground); /* Main background */
}

.app-layout-sidebar {
  flex-shrink: 0; /* Prevent sidebar from shrinking */
  /* Width is controlled within sidebar.component.css */
  height: 100vh; /* Make sidebar full height */
  position: sticky; /* Keep sidebar visible on scroll */
  top: 0;
}

.app-layout-content {
  flex-grow: 1; /* Allow content area to take remaining space */
  display: flex;
  flex-direction: column;
  overflow-y: auto; /* Allow content area to scroll if needed */
}

.app-content { /* Target the <main> element */
  position: relative; /* Needed for absolute positioning of animating children */
  overflow: hidden; /* Prevent scrollbars during animation if children overflow */
  flex-grow: 1;
  /* overflow-y: auto; */ /* You might need this back depending on content */
}


